type USER   @model @auth(rules: [{allow: public}]) {
    id:ID!;
    name:String;
    phone_number:String;
    email:String;
    image:String;
    password:String;
    role:Role;
    payment_type:[PayementType];

}


type PROVIDER   @model @auth(rules: [{allow: public}]) {
    id:ID!;
    user_profile:USER @connection;
    services:[string]; #id of different services the user can provide
    rating:number;
    available:bool;
}

type ADMIN @model @auth(rules: [{allow: private}]){
    id: ID!;
    user_profile:USER @connection;
}



enum Role  {
    USER,
    PROVIDER,
    ADMIN,
}

type payment  @model @auth(rules: [{allow: public}]) {
    id:ID!;
    name:string;
    company:string;
    currency:string;
}

enum PayementType {
    MOMO,
    OM,
    PREPAID CARD,
}

type Service  @model @auth(rules: [{allow: public}]) {
    id:ID!;
    name:String;
    amoungt:float;
    description:String; 
}

type NeedRequest  @model @auth(rules: [{allow: owner}]) {
    id:ID!;
    id_service:String!;
    id_provider:String?;
    description:String;
    file_asset:[FILE];
    status:boolean;
}

type ProviderRequest  @model @auth(rules: [{allow: owner}]) {
    id:ID!;
    id_service:String;
    id_provider:String;
    status:boolean;
}

type ServiceTransaction  @model @auth(rules: [{allow: public}]) {
    chat_room:[ChatRoom] @connection;
    all_need:[need_request] @connection;
    all_provider:[PROVIDER] @connection;
    complete:boolean
}

type PayementTrans  @model @auth(rules: [{allow: public}]) {
    id:ID!;
    type:PaymentType;
    id_need_request:string;
    id_provider:string;
    amought:float;
    complete:Boolean;
}



type InprogressTrans  @model @auth(rules: [{allow: public}]) {
    id:ID!;
    id_need_request:string;
    id_provider:string;
    id_chatroom:String;
    payement_transaction:PayementTrans @connection;
    complete:boolean;
    created_date:Date;
    due_date:Date;
}

enum SMS_Sender {
    USER,
    PROVIDER
}
type Meassage  @model @auth(rules: [{allow: public}]) {
    id:ID!;
    text:String;
    role:SMS_Sender @connection;
    created_date:DATE;
    status:boolean;
}

type ChatRoom  @model @auth(rules: [{allow: public}]) {
    id:ID!;
    id_user:String;
    id_provider:String;
    all_message:Message[][];
}












